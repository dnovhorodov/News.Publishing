version: "3.8"
services:
  nginx:
    restart: always
    image: nginx:alpine
    ports:
      - 8089:80
    volumes:
      - ./src/News.Publishing.Api/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
  
  backend:
    build:
      dockerfile: ./src/News.Publishing.Api/Dockerfile
      context: .
      args:
        project_name: News.Publishing
        run_codegen: true
    deploy:
      replicas: 1
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: always
  
  rabbitmq:
    image: "masstransit/rabbitmq:3.13"
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 10
      test: ["CMD", "rabbitmqctl", "status"]
  
  postgres:
    image: postgres:15.1-alpine
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=Password12!
    ports:
      - "5432:5432"
